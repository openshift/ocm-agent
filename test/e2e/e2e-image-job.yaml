apiVersion: batch/v1
kind: Job
metadata:
  name: osde2e-ocm-agent-${IMAGE_TAG}
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: osde2e
          image: quay.io/redhat-services-prod/osde2e-cicada-tenant/osde2e:latest
          command:
            - /osde2e
          args:
            - test
            - --only-health-check-nodes
            - --skip-destroy-cluster
            - --skip-must-gather
            - --configs
            - rosa,sts,${OSD_ENV},ad-hoc-image
            - --cluster-id
            - ${CLUSTER_ID}
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AD_HOC_TEST_IMAGES
              value: ${TEST_IMAGE}:${IMAGE_TAG}
            - name: OCM_TOKEN
              value: ${OCM_E2E_TOKEN}
            - name: OCM_CLIENT_ID
              value: ${OCM_CLIENT_ID}
            - name: OCM_CLIENT_SECRET
              value: ${OCM_CLIENT_SECRET}
            - name: AWS_ACCESS_KEY_ID
              value: ${AWS_ACCESS_KEY_ID}
            - name: AWS_SECRET_ACCESS_KEY
              value: ${AWS_SECRET_ACCESS_KEY}
            - name: CLOUD_PROVIDER_REGION
              value: ${REGION}
            - name: GCP_CREDS_JSON
              value: ${GCP_CREDS_JSON}
            - name: LOG_BUCKET
              value: 'osde2e-logs'
            - name: CLUSTER_ID
              value: ${CLUSTER_ID}
